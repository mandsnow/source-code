#include <cstdio>
#include <cmath>
#include <iostream>

const int MAXNODE=1000000;
const int MAX=1000000;
using namespace std;

struct NODE
{
    int value;
    int left,right;
}node[MAXNODE];

int father[MAX]={0};

void Buildtree(int i,int left,int right)
{
    node[i].left=left;
    node[i].right=right;
    node[i].value=0;
    if(left==right){
        father[left]=i;
        return;
    }
    Buildtree(i<<1,left,(left+right)/2);
    Buildtree((i<<1)+1,(left+right)/2+1,right);
}

void Updatatree(int ri)
{
    if(ri<=1) return;
    int fi=ri/2;
    int x1=fi*2,x2=fi*2+1;
    int a=node[x1].value;
    int b=node[x2].value;
    node[fi].value=(a>b?a:b);
    Updatatree(ri/2);
}

int Max=-(1<<20);
void Query(int i,int l,int r)
{
    if(node[i].left==l&&node[i].right==r){
        Max=(Max<node[i].value?node[i].value:Max);
        return;
    }
    i=i<<1;
    if(l<=node[i].right){
        if(r<=node[i].right)
            Query(i,l,r);
        else Query(i,l,node[i].right);
    }
    i+=1;
    if(r>=node[i].left){
        if(l>=node[i].left)
            Query(i,l,r);
        else Query(i,node[i].left,r);
    }
}
